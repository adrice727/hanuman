"use strict";var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol?"symbol":typeof obj};var hanuman=function(){var _error=function _error(message){return new Error("ø( ^_^ )ø Hanuman: "+message)};var curry=function curry(fn,args){args=args||[];return function(){var arity=fn.length;var combinedArgs=args.concat(Array.from(arguments));if(combinedArgs.length===arity){return fn.apply(this,combinedArgs)}else{return curry(fn,combinedArgs)}}};var _forEachArray=function _forEachArray(fn,array){for(var i=0;i<array.length;i++){fn(array[i])}};var _forEachObject=function _forEachObject(fn,obj){var keys=Object.keys(obj);for(var i=0;i<keys.length;i++){fn(obj[keys[i]],keys[i],obj)}};var forEach=function forEach(fn,collection){if(!Array.isArray(collection)||(typeof collection==="undefined"?"undefined":_typeof(collection))!=="object"){throw _error("Input must be an array or an object")}Array.isArray(collection)?_forEachArray(fn,collection):_forEachObject(fn,collection)};var map=function map(fn,list){if(!Array.isArray(list)){throw _error("Input must be an array")}var output=[];forEach(function(value){return output.push(fn(value))},list);return output};var filter=function filter(fn,list){if(!Array.isArray(list)){throw _error("Input must be an array")}var reducer=function reducer(acc,item){!!fn(item)&&acc.push(item);return acc};return reduce(reducer,[],list)};var reduce=function reduce(fn,memo,list){if(!Array.isArray(list)){throw _error("Input must be an array")}var result=memo;for(var i=0;i<list.length;i++){result=fn(result,list[i])}return result};var path=function path(props,obj){var nested=obj;var properties=typeof props==="string"?Array.from(props):props;for(var i=0;i<properties.length;i++){nested=nested[properties[i]];if(nested===undefined){return nested}}return nested};return{curry:curry,forEach:curry(forEach),map:curry(map),filter:curry(filter),reduce:curry(reduce),path:curry(path)}}();